<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ExcelDataSet" targetNamespace="http://tempuri.org/ExcelDataSet.xsd" xmlns:mstns="http://tempuri.org/ExcelDataSet.xsd" xmlns="http://tempuri.org/ExcelDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ExcelConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ExcelConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Tarek_DAL.Properties.Settings.GlobalReference.Default.ExcelConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CellsTableAdapter" GeneratorDataComponentClassName="CellsTableAdapter" Name="Cells" UserDataComponentName="CellsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ExcelConnectionString (Settings)" DbObjectName="dbo.Cells" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Cells] WHERE (([Id] = @Original_Id) AND ([Column] = @Original_Column) AND ([Row] = @Original_Row) AND ([WorksheetId] = @Original_WorksheetId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Column" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Column" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Row" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Row" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WorksheetId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorksheetId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Cells] ([Id], [Column], [Row], [Value], [WorksheetId]) VALUES (@Id, @Column, @Row, @Value, @WorksheetId);
SELECT Id, [Column], Row, Value, WorksheetId FROM Cells WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Column" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Column" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Row" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Row" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Value" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Value" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WorksheetId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorksheetId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, [Column], Row, Value, WorksheetId FROM dbo.Cells</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Cells] SET [Id] = @Id, [Column] = @Column, [Row] = @Row, [Value] = @Value, [WorksheetId] = @WorksheetId WHERE (([Id] = @Original_Id) AND ([Column] = @Original_Column) AND ([Row] = @Original_Row) AND ([WorksheetId] = @Original_WorksheetId));
SELECT Id, [Column], Row, Value, WorksheetId FROM Cells WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Column" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Column" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Row" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Row" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Value" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Value" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WorksheetId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorksheetId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Column" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Column" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Row" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Row" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WorksheetId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorksheetId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Column" DataSetColumn="Column" />
              <Mapping SourceColumn="Row" DataSetColumn="Row" />
              <Mapping SourceColumn="Value" DataSetColumn="Value" />
              <Mapping SourceColumn="WorksheetId" DataSetColumn="WorksheetId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ImagesTableAdapter" GeneratorDataComponentClassName="ImagesTableAdapter" Name="Images" UserDataComponentName="ImagesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ExcelConnectionString (Settings)" DbObjectName="dbo.Images" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Images] WHERE (([Id] = @Original_Id) AND ([CellId] = @Original_CellId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CellId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CellId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Images] ([Id], [Content], [CellId]) VALUES (@Id, @Content, @CellId);
SELECT Id, [Content], CellId FROM Images WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Content" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Content" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CellId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CellId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Content, CellId FROM dbo.Images</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Images] SET [Id] = @Id, [Content] = @Content, [CellId] = @CellId WHERE (([Id] = @Original_Id) AND ([CellId] = @Original_CellId));
SELECT Id, [Content], CellId FROM Images WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Content" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Content" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CellId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CellId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CellId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CellId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Content" DataSetColumn="Content" />
              <Mapping SourceColumn="CellId" DataSetColumn="CellId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WorkbooksTableAdapter" GeneratorDataComponentClassName="WorkbooksTableAdapter" Name="Workbooks" UserDataComponentName="WorkbooksTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ExcelConnectionString (Settings)" DbObjectName="dbo.Workbooks" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Workbooks] WHERE (([Id] = @Original_Id) AND ([Created] = @Original_Created) AND ([Modified] = @Original_Modified) AND ([Imported] = @Original_Imported))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Created" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Created" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Modified" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Modified" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Imported" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Imported" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Workbooks] ([Id], [Name], [Created], [Modified], [Imported]) VALUES (@Id, @Name, @Created, @Modified, @Imported);
SELECT Id, Name, Created, Modified, Imported FROM Workbooks WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Created" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Created" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Modified" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Modified" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Imported" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Imported" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Id, Name, Created, Modified, Imported FROM Workbooks</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Workbooks] SET [Id] = @Id, [Name] = @Name, [Created] = @Created, [Modified] = @Modified, [Imported] = @Imported WHERE (([Id] = @Original_Id) AND ([Created] = @Original_Created) AND ([Modified] = @Original_Modified) AND ([Imported] = @Original_Imported));
SELECT Id, Name, Created, Modified, Imported FROM Workbooks WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Created" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Created" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Modified" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Modified" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Imported" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Imported" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Created" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Created" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Modified" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Modified" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Imported" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Imported" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Created" DataSetColumn="Created" />
              <Mapping SourceColumn="Modified" DataSetColumn="Modified" />
              <Mapping SourceColumn="Imported" DataSetColumn="Imported" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WorksheetsTableAdapter" GeneratorDataComponentClassName="WorksheetsTableAdapter" Name="Worksheets" UserDataComponentName="WorksheetsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ExcelConnectionString (Settings)" DbObjectName="dbo.Worksheets" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Worksheets] WHERE (([Id] = @Original_Id) AND ([WorkbookId] = @Original_WorkbookId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WorkbookId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkbookId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Worksheets] ([Id], [Name], [WorkbookId]) VALUES (@Id, @Name, @WorkbookId);
SELECT Id, Name, WorkbookId FROM Worksheets WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WorkbookId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkbookId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, WorkbookId FROM dbo.Worksheets</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Worksheets] SET [Id] = @Id, [Name] = @Name, [WorkbookId] = @WorkbookId WHERE (([Id] = @Original_Id) AND ([WorkbookId] = @Original_WorkbookId));
SELECT Id, Name, WorkbookId FROM Worksheets WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WorkbookId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkbookId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WorkbookId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkbookId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="WorkbookId" DataSetColumn="WorkbookId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ExcelDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="ExcelDataSet" msprop:Generator_UserDSName="ExcelDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Cells" msprop:Generator_TableClassName="CellsDataTable" msprop:Generator_TableVarName="tableCells" msprop:Generator_TablePropName="Cells" msprop:Generator_RowDeletingName="CellsRowDeleting" msprop:Generator_RowChangingName="CellsRowChanging" msprop:Generator_RowEvHandlerName="CellsRowChangeEventHandler" msprop:Generator_RowDeletedName="CellsRowDeleted" msprop:Generator_UserTableName="Cells" msprop:Generator_RowChangedName="CellsRowChanged" msprop:Generator_RowEvArgName="CellsRowChangeEvent" msprop:Generator_RowClassName="CellsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Column" msprop:Generator_ColumnVarNameInTable="columnFieldColumn" msprop:Generator_ColumnPropNameInRow="Column" msprop:Generator_ColumnPropNameInTable="ColumnColumn" msprop:Generator_UserColumnName="Column">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="5" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Row" msprop:Generator_ColumnVarNameInTable="columnRow" msprop:Generator_ColumnPropNameInRow="Row" msprop:Generator_ColumnPropNameInTable="RowColumn" msprop:Generator_UserColumnName="Row" type="xs:int" />
              <xs:element name="Value" msprop:Generator_ColumnVarNameInTable="columnValue" msprop:Generator_ColumnPropNameInRow="Value" msprop:Generator_ColumnPropNameInTable="ValueColumn" msprop:Generator_UserColumnName="Value" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="WorksheetId" msprop:Generator_ColumnVarNameInTable="columnWorksheetId" msprop:Generator_ColumnPropNameInRow="WorksheetId" msprop:Generator_ColumnPropNameInTable="WorksheetIdColumn" msprop:Generator_UserColumnName="WorksheetId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Images" msprop:Generator_TableClassName="ImagesDataTable" msprop:Generator_TableVarName="tableImages" msprop:Generator_TablePropName="Images" msprop:Generator_RowDeletingName="ImagesRowDeleting" msprop:Generator_RowChangingName="ImagesRowChanging" msprop:Generator_RowEvHandlerName="ImagesRowChangeEventHandler" msprop:Generator_RowDeletedName="ImagesRowDeleted" msprop:Generator_UserTableName="Images" msprop:Generator_RowChangedName="ImagesRowChanged" msprop:Generator_RowEvArgName="ImagesRowChangeEvent" msprop:Generator_RowClassName="ImagesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Content" msprop:Generator_ColumnVarNameInTable="columnContent" msprop:Generator_ColumnPropNameInRow="Content" msprop:Generator_ColumnPropNameInTable="ContentColumn" msprop:Generator_UserColumnName="Content">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CellId" msprop:Generator_ColumnVarNameInTable="columnCellId" msprop:Generator_ColumnPropNameInRow="CellId" msprop:Generator_ColumnPropNameInTable="CellIdColumn" msprop:Generator_UserColumnName="CellId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Workbooks" msprop:Generator_TableClassName="WorkbooksDataTable" msprop:Generator_TableVarName="tableWorkbooks" msprop:Generator_TablePropName="Workbooks" msprop:Generator_RowDeletingName="WorkbooksRowDeleting" msprop:Generator_RowChangingName="WorkbooksRowChanging" msprop:Generator_RowEvHandlerName="WorkbooksRowChangeEventHandler" msprop:Generator_RowDeletedName="WorkbooksRowDeleted" msprop:Generator_UserTableName="Workbooks" msprop:Generator_RowChangedName="WorkbooksRowChanged" msprop:Generator_RowEvArgName="WorkbooksRowChangeEvent" msprop:Generator_RowClassName="WorkbooksRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Created" msprop:Generator_ColumnVarNameInTable="columnCreated" msprop:Generator_ColumnPropNameInRow="Created" msprop:Generator_ColumnPropNameInTable="CreatedColumn" msprop:Generator_UserColumnName="Created" type="xs:dateTime" />
              <xs:element name="Modified" msprop:Generator_ColumnVarNameInTable="columnModified" msprop:Generator_ColumnPropNameInRow="Modified" msprop:Generator_ColumnPropNameInTable="ModifiedColumn" msprop:Generator_UserColumnName="Modified" type="xs:dateTime" />
              <xs:element name="Imported" msprop:Generator_ColumnVarNameInTable="columnImported" msprop:Generator_ColumnPropNameInRow="Imported" msprop:Generator_ColumnPropNameInTable="ImportedColumn" msprop:Generator_UserColumnName="Imported" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Worksheets" msprop:Generator_TableClassName="WorksheetsDataTable" msprop:Generator_TableVarName="tableWorksheets" msprop:Generator_TablePropName="Worksheets" msprop:Generator_RowDeletingName="WorksheetsRowDeleting" msprop:Generator_RowChangingName="WorksheetsRowChanging" msprop:Generator_RowEvHandlerName="WorksheetsRowChangeEventHandler" msprop:Generator_RowDeletedName="WorksheetsRowDeleted" msprop:Generator_UserTableName="Worksheets" msprop:Generator_RowChangedName="WorksheetsRowChanged" msprop:Generator_RowEvArgName="WorksheetsRowChangeEvent" msprop:Generator_RowClassName="WorksheetsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="WorkbookId" msprop:Generator_ColumnVarNameInTable="columnWorkbookId" msprop:Generator_ColumnPropNameInRow="WorkbookId" msprop:Generator_ColumnPropNameInTable="WorkbookIdColumn" msprop:Generator_UserColumnName="WorkbookId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Cells" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Images_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Images" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Workbooks_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Workbooks" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Worksheets_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Worksheets" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Cells_Worksheets_WorksheetId" msdata:parent="Worksheets" msdata:child="Cells" msdata:parentkey="Id" msdata:childkey="WorksheetId" msprop:Generator_UserChildTable="Cells" msprop:Generator_ChildPropName="GetCellsRows" msprop:Generator_UserRelationName="FK_Cells_Worksheets_WorksheetId" msprop:Generator_RelationVarName="relationFK_Cells_Worksheets_WorksheetId" msprop:Generator_UserParentTable="Worksheets" msprop:Generator_ParentPropName="WorksheetsRow" />
      <msdata:Relationship name="FK_Images_Cells_CellId" msdata:parent="Cells" msdata:child="Images" msdata:parentkey="Id" msdata:childkey="CellId" msprop:Generator_UserChildTable="Images" msprop:Generator_ChildPropName="GetImagesRows" msprop:Generator_UserRelationName="FK_Images_Cells_CellId" msprop:Generator_ParentPropName="CellsRow" msprop:Generator_RelationVarName="relationFK_Images_Cells_CellId" msprop:Generator_UserParentTable="Cells" />
      <msdata:Relationship name="FK_Worksheets_Workbooks_WorkbookId" msdata:parent="Workbooks" msdata:child="Worksheets" msdata:parentkey="Id" msdata:childkey="WorkbookId" msprop:Generator_UserChildTable="Worksheets" msprop:Generator_ChildPropName="GetWorksheetsRows" msprop:Generator_UserRelationName="FK_Worksheets_Workbooks_WorkbookId" msprop:Generator_ParentPropName="WorkbooksRow" msprop:Generator_RelationVarName="relationFK_Worksheets_Workbooks_WorkbookId" msprop:Generator_UserParentTable="Workbooks" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>